---
title: "3.BMF_computation_PCB"
format: html
---

```{r}
#| message: false
#| include: false
library(chopin.magnification)
library(tidyverse)
library(writexl)
```

# 1. Statistics on contamination levels for PCB subdataset

## Filter data
```{r}
contam_PCB_ng_gdw <- contam |> 
  select(species, alim, labels, grp, d15N, 
         starts_with("CB") & ends_with("ng_gdw") & !contains("normalised"),
         -contains("187"), -contains("194")) |> 
  mutate(type = case_when(species == "Solea_solea" ~ "Sole", 
                          TRUE ~ "Prey")) |> 
  drop_na(CB153_ng_gdw)
names(contam_PCB_ng_gdw) <- names(contam_PCB_ng_gdw) |> str_remove("_ng_gdw")
```

## Compute median, Q1 () and Q3 (max) contamination levels in sole and each species of preys
```{r}
# Summarise contamination: Q1, median, Q3
contam_PCB_ng_gdw_species_min <- contam_PCB_ng_gdw |> 
  group_by(type, grp, labels, species) |> 
  summarise(across(.cols = starts_with("CB"), .fns = ~ quantile(.x, probs = 0.25, digits = 2)))

contam_PCB_ng_gdw_species_median <- contam_PCB_ng_gdw |> 
  group_by(type, grp, labels, species) |> 
  summarise(across(.cols = starts_with("CB"), .fns = ~ median_plus(.x)))

contam_PCB_ng_gdw_species_max <- contam_PCB_ng_gdw |> 
  group_by(type, grp, labels, species) |> 
  summarise(across(.cols = starts_with("CB"), .fns = ~ quantile(.x, probs = 0.75, digits = 2)))

# Join Q1, median, Q3
contam_PCB_ng_gdw_species_stats <- full_join(
   contam_PCB_ng_gdw_species_min |> 
     pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "min_ng_gdw"),
   contam_PCB_ng_gdw_species_median |> 
     pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "median_ng_gdw")
  ) |>
   full_join(contam_PCB_ng_gdw_species_max |> 
     pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "max_ng_gdw"))

contam_PCB_ng_gdw_species_stats

# Save dataset
write_xlsx(x = contam_PCB_ng_gdw_species_stats, path = "results/BMF_computation_PCB/4.1.contam_PCB_ng_gdw_species_stats.xlsx")
```

## Compute median, Q1 () and Q3 (max) contamination levels for each taxon
```{r}
# Summarise contamination: Q1, median, Q3
contam_PCB_ng_gdw_taxon_min <- contam_PCB_ng_gdw |> 
  group_by(type, grp) |> 
  summarise(across(.cols = starts_with("CB"), 
                   .fns = ~ quantile(.x, probs = 0.25, digits = 2))) |> 
  ungroup()

contam_PCB_ng_gdw_taxon_median <- contam_PCB_ng_gdw |> 
  group_by(type, grp) |> 
  summarise(across(.cols = starts_with("CB"), 
                   .fns = ~ median_plus(.x)))  |> 
  ungroup()

contam_PCB_ng_gdw_taxon_max <- contam_PCB_ng_gdw |> 
  group_by(type, grp) |> 
  summarise(across(.cols = starts_with("CB"), 
                   .fns = ~ quantile(.x, probs = 0.75, digits = 2))) |> 
  ungroup()

# Join Q1, median, Q3
contam_PCB_ng_gdw_taxon_stats <- full_join(
   contam_PCB_ng_gdw_taxon_min |> 
     pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "min_ng_gdw"),
   contam_PCB_ng_gdw_taxon_median |> 
     pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "median_ng_gdw")
  ) |>
   full_join(contam_PCB_ng_gdw_taxon_max |> 
     pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "max_ng_gdw"))

contam_PCB_ng_gdw_taxon_stats

# Save dataset
write_xlsx(x = contam_PCB_ng_gdw_taxon_stats, path = "results/BMF_computation_PCB/4.1.contam_PCB_ng_gdw_taxon_stats.xlsx")
```

# 2. BMF species

## BMF species Computation
```{r}
contam_species_prey_min <- contam_PCB_ng_gdw_species_min |> filter(type == "Prey")
contam_species_prey_median <- contam_PCB_ng_gdw_species_median |> filter(type == "Prey")
contam_species_prey_max <- contam_PCB_ng_gdw_species_max |> filter(type == "Prey")
contam_species_sole_min <- contam_PCB_ng_gdw_species_min |> filter(type == "Sole")
contam_species_sole_median <- contam_PCB_ng_gdw_species_median |> filter(type == "Sole")
contam_species_sole_max <- contam_PCB_ng_gdw_species_max |> filter(type == "Sole")

BMF_PCB_ng_gdw_species_min <- contam_species_prey_min |>
    mutate(across(
      .cols = where(is.numeric),
      .fns = ~ .x / contam_species_sole_max[[cur_column()]]
      ), stat = "min") |> 
  pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "BMF")
BMF_PCB_ng_gdw_species_median <- contam_species_prey_median |>
    mutate(across(
      .cols = where(is.numeric),
      .fns = ~ .x / contam_species_sole_median[[cur_column()]]
    ), stat = "median") |> 
  pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "BMF")
BMF_PCB_ng_gdw_species_max <- contam_species_prey_max |>
    mutate(across(
      .cols = where(is.numeric),
      .fns = ~ .x / contam_species_sole_min[[cur_column()]]
    ), stat = "max") |> 
  pivot_longer(cols = starts_with("CB"), names_to = "PCB", values_to = "BMF")

BMF_PCB_ng_gdw_species <- BMF_PCB_ng_gdw_species_min |> 
  full_join(BMF_PCB_ng_gdw_species_median) |> 
  full_join(BMF_PCB_ng_gdw_species_max)
```

```{r}
BMF_PCB_ng_gdw_species_excel <- BMF_PCB_ng_gdw_species |> 
  pivot_wider(names_from = stat, values_from = BMF)
write_xlsx(x = BMF_PCB_ng_gdw_species_excel, 
           path = "results/BMF_computation_PCB/4.2.BMF_PCB_ng_gdw_species.xlsx")
```

## Graph BMFs for all species & all CBs
```{r}
ggplot_BMF_PCB_ng_gdw_species_all <- ggplot(BMF_PCB_ng_gdw_species) +
  aes(x = labels, y = BMF, fill = grp) +
  geom_col() +
  facet_wrap(vars(PCB), scales = "free_y") +
  geom_hline(yintercept = 1) +
  theme(axis.text.x=element_text(size=9, angle=45, hjust=1)) +
  labs(x = NULL, fill = "Taxon")

ggplot_BMF_PCB_ng_gdw_species_all
```
```{r}
ggsave(
  filename = "results/BMF_computation_PCB/4.2.ggplot_BMF_PCB_ng_gdw_species_all.jpg",
  plot = ggplot_BMF_PCB_ng_gdw_species_all, width = 30, height = 20, units = "cm"
)
```

## Compute Mean BMF per CBs
```{r}
BMF_PCB_ng_gdw_species_summarised <- BMF_PCB_ng_gdw_species_excel |> 
  group_by(PCB) |> 
  summarise(min = min_plus(min),
            median = mean_plus(median),
            max = max_plus(max)) |> 
  left_join(contam_prop, by = c("PCB" = "chemical")) |> 
  mutate(logKow = as.numeric(logKow)) |> 
  mutate(sub_family_TAG = factor(sub_family_TAG, 
                                 levels = c("tri-CB", "tetra-CB", "penta-CB", 
                                            "hexa-CB", "hepta-CB")))

write_xlsx(x = BMF_PCB_ng_gdw_species_summarised, 
           path = "results/BMF_computation_PCB/4.2.BMF_PCB_ng_gdw_species_summarised.xlsx")
```

## Graph Mean BMF per CBs
```{r}
ggplot_BMF_PCB_ng_gdw_species_summarised <- BMF_PCB_ng_gdw_species_summarised  |> 
  ggplot() +
  aes(x = logKow, y = log(median), colour = sub_family_TAG) +
  geom_point() +
  geom_errorbar(aes(ymin = log(min), ymax = log(max)), width = 0.1) +
  geom_hline(yintercept = 0) +
  scale_color_manual(values = my_colors) +
  labs(color = "Chlorine substitution", y = "Log BMF")
ggplot_BMF_PCB_ng_gdw_species_summarised
```
```{r}
ggsave(
  filename = "results/BMF_computation_PCB/4.2.ggplot_BMF_PCB_ng_gdw_species_summarised.jpg",
  plot = ggplot_BMF_PCB_ng_gdw_species_summarised, width = 30, height = 20, units = "cm"
)
```

# 3. BMF diet

## Proportions of each prey "grp" in sole's diet
```{r}
diet_comp <- tibble(taxon = c("Polychaeta", "Crustacea", "Bivalvia"),
                    diet_portion = diet)
```

## BMF diet computation

### Compute diet contamination stats
```{r}
contam_PCB_ng_gdw_diet_stats_prey <- contam_PCB_ng_gdw_taxon_stats %>%
  left_join(diet_comp, by = c("grp" = "taxon")) %>%
  mutate(across(
    ends_with("_ng_gdw"),
    ~ .x * diet_portion
  )) |> 
  filter(type == "Prey") |> 
  group_by(PCB) |> 
  summarise(across(ends_with("_ng_gdw"), ~ sum(.x)))
contam_PCB_ng_gdw_diet_stats_prey
```

### Get sole contamination stats
```{r}
contam_PCB_ng_gdw_diet_stats_sole <- contam_PCB_ng_gdw_taxon_stats |>
  filter(type == "Sole") |> 
  select(-type, -grp)
 contam_PCB_ng_gdw_diet_stats_sole
```

### Compute diet BMFs
```{r}
BMF_PCB_ng_gdw_diet <- full_join(contam_PCB_ng_gdw_diet_stats_sole, contam_PCB_ng_gdw_diet_stats_prey,
           by = "PCB", suffix = c("_sole", "_prey")) |> 
   group_by(PCB) |> 
   mutate(BMF_diet_min = min_ng_gdw_prey / max_ng_gdw_sole,
          BMF_diet_median = median_ng_gdw_prey / median_ng_gdw_sole,
          BMF_diet_max = max_ng_gdw_prey / min_ng_gdw_sole) |> 
  left_join(contam_prop, by = c("PCB" = "chemical")) 
```

```{r}
write_xlsx(x = BMF_PCB_ng_gdw_diet, 
           path = "results/BMF_computation_PCB/4.3.BMF_PCB_ng_gdw_diet.xlsx")
```

## Graph BMFs per CBs
```{r}
ggplot_BMF_PCB_ng_gdw_diet <- BMF_PCB_ng_gdw_diet |>
  ggplot() +
  aes(x = logKow, y = BMF_diet_median, colour = sub_family_TAG) +
  geom_point() +
  geom_errorbar(aes(ymin = BMF_diet_min, ymax = BMF_diet_max), width = 0.05) +
  geom_hline(yintercept = 1) +
  scale_color_manual(values = my_colors) +
  labs(color = "Chlorine substitution", y = "BMF")
ggplot_BMF_PCB_ng_gdw_diet
```
```{r}
ggsave(
  filename = "results/BMF_computation_PCB/4.3.ggplot_BMF_PCB_ng_gdw_diet.jpg",
  plot = ggplot_BMF_PCB_ng_gdw_diet, width = 30, height = 20, units = "cm"
)
```

## Graph BMFs per CBs - log transformation
```{r}
ggplot_BMF_PCB_ng_gdw_diet_log <- BMF_PCB_ng_gdw_diet |> 
  ggplot() +
  aes(x = logKow, y = log(BMF_diet_median), colour = sub_family_TAG) +
  geom_point() +
  geom_errorbar(aes(ymin = log(BMF_diet_min), ymax = log(BMF_diet_max)), width = 0.05) +
  geom_hline(yintercept = 0) +
  scale_color_manual(values = my_colors) +
  labs(color = "Chlorine substitution", y = "Log BMF")
ggplot_BMF_PCB_ng_gdw_diet_log
```
```{r}
ggsave(
  filename = "results/BMF_computation_PCB/4.3.ggplot_BMF_PCB_ng_gdw_diet_log.jpg",
  plot = ggplot_BMF_PCB_ng_gdw_diet_log, width = 30, height = 20, units = "cm"
)
```

# 4. BMF comparison

```{r}
BMF_species <- BMF_PCB_ng_gdw_species_summarised |> mutate(type = "species")
BMF_diet <- BMF_PCB_ng_gdw_diet |> 
  select(PCB, starts_with("BMF")) |> 
  mutate(type = "diet") |> 
  rename_with(.fn = ~ str_remove(.x, "BMF_diet_"))

BMFs_compare <- full_join(BMF_species, BMF_diet)

ggplot_BMFs_compare <- ggplot(BMFs_compare) +
  aes(x = PCB, y = log(median), fill = type) +
  geom_col(position = "dodge") +
  geom_errorbar(aes(ymin = log(min), ymax = log(max), colour = type), 
                position = position_dodge(width = 0.9),
                width = 0.4) +
  geom_hline(yintercept = 0) +
  scale_color_manual(values = c("#CB2027", "#009E73")) +
  labs(x = NULL, y = "Log BMF", fill = "BMF type", color = "BMF type") +
  theme(axis.text.x=element_text(size=9, angle=45, hjust=1))

ggplot_BMFs_compare
```
```{r}
ggsave(plot = ggplot_BMFs_compare, filename = "results/BMF_computation_PCB/4.4.ggplot_BMFs_compare_ng_gdw.jpg", width = 20, height = 15, units = "cm")

```


