---
title: "2.Data_analysis"
format: html
---

```{r}
#| message: false
#| include: false
library(chopin.magnification)
library(tidyverse)
library(ggthemes)
library(FSA)
```

## 1. Diet composition

Data computation:
```{r}
taxa <- stomac_soles |> distinct(Faunistic_grp) |>  pull()
abundance_tot <- sum(stomac_soles$N_tot_in_tractus, na.rm = T)
diet <- c(NA)
for (taxon in 1:length(taxa)) {
    diet[taxon] <- sum(stomac_soles[stomac_soles$Faunistic_grp == taxa[taxon], ]$N_tot_in_tractus, na.rm = T) / abundance_tot
}
names(diet) <- taxa

usethis::use_data(diet, overwrite = TRUE)
```

Pie chart:
```{r}
gg_color_hue <- function(n) {
  hues = seq(15, 375, length = n + 1)
  hcl(h = hues, l = 65, c = 100)[1:n]
}
colors = gg_color_hue(4)

ggdata_diet <- tibble("taxon" = names(diet), "diet" = diet)
ggplot_diet <- ggplot(ggdata_diet) +
  aes(x = "", y = diet, fill = taxon) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  scale_fill_manual(values = c(colors[4], colors[3], colors[2])) +
  labs(fill = "Taxon") +
  theme_minimal() +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    panel.border = element_blank(),
    panel.grid = element_blank(),
    axis.ticks = element_blank()
  ) +
  theme(axis.text.x=element_blank()) +
  geom_text(aes(y = diet/3 + c(0, cumsum(diet)[-length(diet)])), 
            label = paste(round(diet*100, digits = 0), "%"), size=5)

# Save plot
ggsave(plot = ggplot_diet, filename = "results/data_analysis/1.ggplot_diet.jpg",
       width = 5, height = 3)
```


## 2. Lipid contents

Dataset:
```{r}
lipid <- contam |>
  select(species, lipid_percent_dw) |>
  full_join(metadata) |> 
  drop_na()
```

Descriptive statistics:
```{r}
min(lipid$lipid_percent_dw) # 0.75
max(lipid$lipid_percent_dw) # 7
lipid |> summarise(median(lipid_percent_dw), .by = grp)
```


Tests between taxa:
```{r}
dunn_lipid <- dunnTest(lipid_percent_dw ~ grp, data = lipid, method = "bonferroni")
res_dunn_grp <- dunn_lipid$res |> select(Comparison, P.adj) |> 
  mutate(P.adj = round(P.adj, digits = 3))
res_dunn_grp
```


```{r}
# Annotations for boxplots
counts <- lipid |>
  group_by(grp) |> 
  summarise(n = sum(!is.na(lipid_percent_dw)))

# Boxplots
ggplot_lipid <- ggplot(lipid) +
  aes(x = grp, y = lipid_percent_dw, fill = grp) +
  geom_boxplot() +
  labs(x = NULL, y = "Lipid content (%dw)", fill = "Taxa") +
  geom_text(
    data = counts,
    aes(x = c(1, 2, 3, 4),
        y = max(lipid$lipid_percent_dw)*1.1,
        label = paste0("n=", n)),
    inherit.aes = FALSE, hjust = 0.5, vjust = 1
  )

# Save plot
ggsave(plot = ggplot_lipid, filename = "results/data_analysis/2.ggplot_lipid.jpg",
       width = 5, height = 3)
```


## 3. Overall levels

```{r}
sub_data <- list("Soles" = contam |> filter(species == "Solea_solea"), 
                 "Prey" = contam |> filter(species != "Solea_solea"), 
                 "Bivalves" = contam |> filter(grp == "Bivalvia"), 
                 "Crustaceans" = contam |> filter(grp == "Crustacea"), 
                 "Polychaetes" = contam |> filter(grp == "Polychaeta"), 
                 "Suspensivores" = contam |> filter(alim == "Suspensivore"), 
                 "Deposivores" = contam |> filter(alim == "Deposivore"), 
                 "Omnivores" = contam |> filter(alim == "Omnivore"))
```


```{r}
families <- c("PCB", "PFAS", "HBCDD")

sum_levels_ng_gdw <- c()
for(family in families){
  for(type in 1:length(sub_data)) {
  sum_levels_ng_gdw <- rbind(sum_levels_ng_gdw,
                             get_stats(type = names(sub_data)[type],
                                       contam = paste0(family, " (ng/gdw)"),
                                       sub_data[[type]][, paste0("somme", family, "_ng_gdw")] |> pull()))
  }
}

sum_levels_ng_gww <- c()
for(family in families){
  for(type in 1:length(sub_data)) {
  sum_levels_ng_gww <- rbind(sum_levels_ng_gww,
                             get_stats(type = names(sub_data)[type],
                                       contam = paste0(family, " (ng/gww)"),
                                       sub_data[[type]][, paste0("somme", family, "_ng_gww")] |> pull()))
  }
}

sum_levels_ng_glw <- c()
for(family in families[c(1,3)]){
  for(type in 1:length(sub_data)) {
  sum_levels_ng_glw <- rbind(sum_levels_ng_glw,
                             get_stats(type = names(sub_data)[type],
                                       contam = paste0(family, " (ng/glw)"),
                                       sub_data[[type]][, paste0("somme", family, "_ng_glw")] |> pull()))
  }
}
```


```{r}
sum_levels_ng_gdw <- rbind(
      get_stats(type = "Prey", contam = "PCB (ng/gdw)", prey$sommePCB_ng_gdw), 
      get_stats(type = "Soles", contam = "PCB (ng/gdw)", soles$sommePCB_ng_gdw),
      get_stats(type = "Prey", contam = "PFAS (ng/gdw)", prey$sommePFAS_ng_gdw), 
      get_stats(type = "Soles", contam = "PFAS (ng/gdw)", soles$sommePFAS_ng_gdw),
      get_stats(type = "Prey", contam = "HBCDD (ng/gdw)", prey$sommeHBCDD_ng_gdw),
      get_stats(type = "Soles", contam = "HBCDD (ng/gdw)", soles$sommeHBCDD_ng_gdw)
      )

sum_levels_ng_gww <- rbind(
      get_stats(type = "Prey", contam = "PCB (ng/gww)", prey$sommePCB_ng_gww), 
        get_stats(type = "Soles", contam = "PCB (ng/gww)", soles$sommePCB_ng_gww),
      get_stats(type = "Prey", contam = "PFAS (ng/gww)", prey$sommePFAS_ng_gww), 
      get_stats(type = "Soles", contam = "PFAS (ng/gww)", soles$sommePFAS_ng_gww),
      get_stats(type = "Prey", contam = "HBCDD (ng/gww)", prey$sommeHBCDD_ng_gww),
      get_stats(type = "Soles", contam = "HBCDD (ng/gww)", soles$sommeHBCDD_ng_gww)
      )

sum_levels_ng_glw <- rbind(
      get_stats(type = "Prey", contam = "PCB (ng/glw)", prey$sommePCB_ng_glw), 
      get_stats(type = "Soles", contam = "PCB (ng/glw)", soles$sommePCB_ng_glw),
      get_stats(type = "Prey", contam = "HBCDD (ng/glw)", prey$sommeHBCDD_ng_glw),
      get_stats(type = "Soles", contam = "HBCDD (ng/glw)", soles$sommeHBCDD_ng_glw)
      )

sum_levels <- rbind(sum_levels_ng_gdw, sum_levels_ng_gww, sum_levels_ng_glw)

# Save dataset
write_csv(x = sum_levels, file = "results/data_analysis/3.sum_levels.csv")
```


## 4. Total levels by species

Plot of the total levels (sum in ng/g dw) in the different taxa and feeding mode:
```{r}
ggdata_sumfamily_species <- contam |> 
  select(species, grp, alim, sommePCB_ng_gdw, sommePFAS_ng_gdw, sommeHBCDD_ng_gdw) |> 
  pivot_longer(cols = c(sommePCB_ng_gdw, sommePFAS_ng_gdw, sommeHBCDD_ng_gdw), 
                names_to = "family", values_to = "sum_ng_gdw") |> 
  mutate(family = family |>  str_remove("somme"),
         family = family |>  str_remove("_ng_gdw"),
         family = factor(family, levels = c("PCB", "PFAS", "HBCDD")))

# Annotations for plot
counts <- ggdata_sumfamily_species |>
  group_by(family, grp) |> 
  summarise(counts = sum(!is.na(sum_ng_gdw)))
maxs <- ggdata_sumfamily_species |>
  group_by(family) |> 
  summarise(maxs = max(sum_ng_gdw, na.rm = TRUE))
gg_text <- full_join(counts, maxs)

ggplot_sumfamily_species <- ggplot(ggdata_sumfamily_species) +
  aes(x = grp, y = sum_ng_gdw, fill = alim, col = alim) +
  geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.7) +
  facet_wrap(vars(family), nrow = 1, scales = "free_y") +
  # add median value
  stat_summary(inherit.aes = FALSE, aes(x = grp, y = sum_ng_gdw),
    fun = median, geom = "crossbar", size = 0.5, width = .5) +
  theme(axis.text.x=element_text(size=9, angle=45, hjust=1)) +
  theme(legend.position = "bottom") +
  labs(x = NULL, y = "Sum concentrations (ng/g dw)", fill = "Feeding mode") +
  guides(color = FALSE)+
  geom_text(
    data = gg_text,
    aes(x = rep.int(1:4, times = 3),
        y = maxs*1.1,
        label = paste0("n=", counts)),
    inherit.aes = FALSE, hjust = 0.5, vjust = 1
  )

ggsave(
  filename = "results/data_analysis/4.ggplot_contamination_sumfamily_species.jpg",
  plot = ggplot_sumfamily_species, width = 20, height = 10, units = "cm"
)
```

Test taxa effect:

```{r}
# PCB in ng/g lw
kruskal.test(sommePCB_ALL_ng_glw ~ grp, data = contam) # p-value < 0.05
# PFAS in ng/g dw
kruskal.test(sommePFAS_ALL_ng_gdw ~ grp, data = contam) # p-value < 0.05
# HBCDD in ng/g lw
kruskal.test(sommeHBCDD_ALL_ng_glw ~ grp, data = contam) # p-value < 0.05
```

```{r}
dunn_PCB_grp <- dunnTest(sommePCB_ALL_ng_glw ~ grp, data = contam |> drop_na(sommePCB_ALL_ng_glw))
dunn_PFAS_grp <- dunnTest(sommePFAS_ALL_ng_gdw ~ grp, data = contam |> drop_na(sommePFAS_ALL_ng_gdw))
dunn_HBCDD_grp <- dunnTest(sommeHBCDD_ALL_ng_glw ~ grp, data = contam |> drop_na(sommeHBCDD_ALL_ng_glw))

res_dunn_grp <- dunn_PCB_grp$res |> select(Comparison, P.adj) |>
  full_join(dunn_PFAS_grp$res  |> select(Comparison, P.adj), by = "Comparison") |>
  full_join(dunn_HBCDD_grp$res  |> select(Comparison, P.adj), by = "Comparison") |> 
  mutate(across(.cols = c(P.adj.x, P.adj.y, P.adj), .fns = ~ signif(.x, digits = 4)))
names(res_dunn_grp) <- c("Comparison", "PCB", "PFAS", "HBCDD")

writexl::write_xlsx(x = res_dunn_grp, path = "results/data_analysis/4.test_dunn_taxa.xlsx")
```

Test feeding mode effect:

```{r}
# PCB in ng/g lw
kruskal.test(sommePCB_ALL_ng_glw ~ alim, data = contam) # p-value = 0.14
# PFAS in ng/g dw
kruskal.test(sommePFAS_ALL_ng_gdw ~ alim, data = contam) # p-value < 0.05
# HBCDD in ng/g lw
kruskal.test(sommeHBCDD_ALL_ng_glw ~ alim, data = contam) # p-value < 0.05
```

```{r}
dunn_PCB_alim <- dunnTest(sommePCB_ALL_ng_glw ~ alim, data = contam |> drop_na(sommePCB_ALL_ng_glw))
dunn_PFAS_alim <- dunnTest(sommePFAS_ALL_ng_gdw ~ alim, data = contam |> drop_na(sommePFAS_ALL_ng_gdw))
dunn_HBCDD_alim <- dunnTest(sommeHBCDD_ALL_ng_glw ~ alim, data = contam |> drop_na(sommeHBCDD_ALL_ng_glw))

res_dunn_alim <- dunn_PCB_alim$res |> select(Comparison, P.adj) |>
  full_join(dunn_PFAS_alim$res  |> select(Comparison, P.adj), by = "Comparison") |>
  full_join(dunn_HBCDD_alim$res  |> select(Comparison, P.adj), by = "Comparison") |> 
  mutate(across(.cols = c(P.adj.x, P.adj.y, P.adj), .fns = ~ signif(.x, digits = 4)))
names(res_dunn_alim) <- c("Comparison", "PCB", "PFAS", "HBCDD")

writexl::write_xlsx(x = res_dunn_alim, path = "results/data_analysis/4.test_dunn_alim.xlsx")
```
